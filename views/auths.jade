doctype html
html
	head
		title Miaou - Room Authorizations
		link(rel="icon",type="image/png",href="static/M-32.png")
		link(rel='stylesheet', href='static/main.css')
		script(src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js")
		script(src="static/miaou.min.js")
		style.
			.C {
				background: $bg-color;
				padding: 2px;
				display: table-cell;
				vertical-align: top;
			}
			.C1 {
				width: 30%;
			}
			.C2 {
				width: 40%;
			}
			.CC {
				padding: 2px;
			}
			#submit_bar {
				clear:both;
			}
	body
		- authLevels = ['read', 'write', 'admin', 'own']
		- rol = authLevels.indexOf(room.auth)
		form(method="post")
			input(type="hidden", name="room", value=room.id)
			input(type="hidden", name="secret", value=secret)
			div.MP#auths-page
				h1
					a(href="rooms") Miaou
					| /
					a(href=room.path)= room.name
					button#backToRoom Back to room
				if room.private
					p This room is private, only authorized users can enter.
				else
					p This room is public, everybody can read and write messages but authorizations are needed to change the name and description or manage authorizations.
				p
					case room.auth
						when 'own'
							| As a room owner you can change everybody's rights. You can also &nbsp;
							a(href="room?id="+room.id)
								| edit the room
								if room.private
									| and make it public
								else
									| and make it private
								| .
						when 'admin'
							| As a room admin you can change the rights of everybody, apart owners. You can also &nbsp;
							a(href="room?id="+room.id) edit the room
							| .
						default
							| Your authorization level doesn't make it possible for you to manage rights in this room.
				div.C.C1
					h2 Access Requests
					if requests.length
						table.list
							each r, i in requests
								tr.userLine(data-user={id:r.player})
									th
										span.user= r.name
									td.date= r.requested
									td
										- var name = "answer_request_"+r.player
										div
											input(type="radio", _name=name, id="g"+i, value="grant")
											label(for="g"+i) Grant Access
										div
											input(type="radio", _name=name, id="d"+i, value="deny")
											label(for="d"+i) Deny Access
								tr.userLine
									td
										span= r.name+' '
										| says
									td.rendered(colspan="2")= r.request_message
								tr.userLine.denyMessageTr(style="display:none")
									td(colspan="3")
										input(type="text",style="width:100%",_name="deny_message_"+r.player,placeholder="optional message")
					else
						p none currently
					h2 Recent Users With No Authorization
					if unauthorizedUsers.length
						table.list
							each u in unauthorizedUsers
								tr.userLine(data-user={id:u.id})
									th
										span.user= u.name
									if rol>=2
										td.auth
											- var name = "insert_auth_"+u.id
											select(_name=name)
												option(value="admin") admin
												option(value="write") write
												option(value="none",selected) no access
					else
						p none currently
				div.C.C1
					h2 Existing Authorizations
					table.list
						each ua in auths
							tr.userLine(data-user={id:ua.player})
								th
									span.user= ua.name
								- ual = authLevels.indexOf(ua.auth)
								if rol>=2 && rol>=ual
									td.auth
										- var name = "change_auth_"+ua.player
										select(_name=name)
											if room.auth==='own'
												option(value="own", selected=ua.auth==="own") own
											option(value="admin", selected=ua.auth==="admin") admin
											option(value="write", selected=ua.auth==="write") write
											option(value="none") no access
								else
									td.auth= ua.auth
				div.C.C2
					h2 Active Bans
					table.list
						each ban in bans
							tr
								th
									span.user=ban.bannedname
								td									
									| banned by
									span.user=' '+ban.bannername+' '
									| until
									span= ' '+new Date(ban.expires*1000)
								td(style="white-space:nowrap")
									- var name = "unban_"+ban.id+"_"+ban.banned
									input(type="checkbox",_name=name,id=name)
									label(for=name) unban
				p#submit_bar
					input(type="reset", value="Cancel Changes", disabled)
					input(type="submit", value="Validate Changes", disabled)

		script.
			miaou(function(){
				var room = !{JSON.stringify(room)};
					
				$('.date').text(function(_,t){
					return Date.now()/1000-t<15*60 ? "just now" : miaou.formatRelativeDate(t*1000);
				});
				$('input,select').change(function(){ this.name = this.getAttribute('_name') });
				if (!(room.auth==='own'||room.auth==='admin')) {
					$('input,select').prop('disabled', true);
				} else {
					$('input, select').change(function(){ $('#submit_bar input').prop('disabled', false) })
					$('input[type=reset]').click(function(){ $('#submit_bar input').prop('disabled', true) });
				}
				$('#auths-page')
				.on('mouseenter', '.user', miaou.prof.show).on('mouseleave', '.profile', miaou.prof.hide)
				.on('mouseleave', '.user', function(e){
					if (!miaou.gui.eventIsOver(e, $('.profile'))) miaou.prof.hide();
				});
				$('#backToRoom').click(function(){ location = room.path; return false });
				$('input[type=radio]').click(function(){
					var $row = $(this).closest('tr').nextAll('.denyMessageTr').first();
					if (this.value=='deny') $row.show().find('input').focus();
					else $row.hide();
				})
				$('td.rendered').each(function(){
					var h = this.innerHTML;
					if (h) this.innerHTML = miaou.mdToHtml(h);
					else $(this).closest('tr').hide()
				})
			});
