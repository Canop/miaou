#!/usr/bin/env node

'use strict';

var https = require('https');
var fs = require('fs');
var spawn = require('child_process').spawn;
var modulesFolder = 'vagrant/manifests/modules/';

var puppetModules = {
    'apt': {
        url: 'https://forge-apilb01-prod.puppetlabs.com/v3/files/puppetlabs-apt-1.4.1.tar.gz',
        folder: 'puppetlabs-apt-1.4.1'
    },
    'concat': {
        url: 'https://forge-apilb01-prod.puppetlabs.com/v3/files/puppetlabs-concat-1.1.0-rc1.tar.gz',
        folder: 'puppetlabs-concat-1.1.0-rc1'
    },
    'firewall': {
        url: 'https://forge-apilb01-prod.puppetlabs.com/v3/files/puppetlabs-firewall-1.0.0.tar.gz',
        folder: 'puppetlabs-firewall-1.0.0'
    },
    'gcc': {
        url: 'https://forge-apilb01-prod.puppetlabs.com/v3/files/puppetlabs-gcc-0.1.0.tar.gz',
        folder: 'puppetlabs-gcc-0.1.0'
    },
    'postgresql': {
        url: 'https://forge-apilb01-prod.puppetlabs.com/v3/files/puppetlabs-postgresql-3.3.0.tar.gz',
        folder: 'puppetlabs-postgresql-3.3.0'
    },
    'redis': {
        url: 'https://forge-apilb01-prod.puppetlabs.com/v3/files/thomasvandoren-redis-0.0.9.tar.gz',
        folder: 'thomasvandoren-redis-0.0.9'
    },
    'stdlib': {
        url: 'https://forge-apilb01-prod.puppetlabs.com/v3/files/puppetlabs-stdlib-4.1.0.tar.gz',
        folder: 'puppetlabs-stdlib-4.1.0'
    },
    'wget': {
        url: 'https://forge-apilb01-prod.puppetlabs.com/v3/files/maestrodev-wget-1.3.1.tar.gz',
        folder: 'maestrodev-wget-1.3.1'
    }
};

Object.keys(puppetModules).forEach(function(module) {
    var moduleObj = puppetModules[module]

    var file = fs.createWriteStream(modulesFolder + moduleObj.folder + '.tar.gz');
    https.get(moduleObj.url, function(res) {
        res.pipe(file);
        file.on('finish', function() {
            file.close();
            uncompress(module);
        });
    });
});

function uncompress(module) {
    var moduleObj = puppetModules[module];
    var tar = spawn('tar', ['xf', modulesFolder + moduleObj.folder + '.tar.gz']);
    tar.on('close', function(code) {
        if (code !== 0) {
            throw new Error('Uncompressing the module ' + module + ' went wrong.');
        }

        fs.unlink(modulesFolder + moduleObj.folder + '.tar.gz', function(err) {
            if (err) throw err;
            rename(module);
        });
    });
}

function rename(module) {
    var moduleObj = puppetModules[module];
    fs.rename(moduleObj.folder, modulesFolder + module, function() {
        console.log('The ' + module + ' module is correctly installed.');
    });
}
