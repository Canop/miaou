const float = require('../../libs/fmt.js').float;

const tests = [
	[1, "1", "1", "-1", "1", "1"],
	[12, "12", "12", "-12", "0.083", "12"],
	[123, "123", "123", "-123", "0.008", "123"],
	[1234, "1234", "1234", "-1234", "8.104e-4", "1234"],
	[12345, "12345", "12345", "-12345", "8.1e-5", "12345"],
	[123456, "1.23e+5", "123456", "-123456", "8.1e-6", "123456"],
	[1234567, "1.23e+6", "1.235e+6", "-1.235e+6", "8.1e-7", "1234567"],
	[123456789, "1.23e+8", "1.235e+8", "-1.235e+8", "8.1e-9", "1.2346e+8"],
	[1234567890, "1.23e+9", "1.235e+9", "-1.235e+9", "8.1e-10", "1.2346e+9"],
	[0.1, "0.1", "0.1", "-0.1", "10", "0.1"],
	[0.12, "0.12", "0.12", "-0.12", "8.333", "0.12"],
	[0.123, "0.12", "0.123", "-0.123", "8.13", "0.123"],
	[0.1234, "0.12", "0.123", "-0.123", "8.104", "0.1234"],
	[100, "100", "100", "-100", "0.01", "100"],
	[100.1, "100.1", "100.1", "-100.1", "0.01", "100.1"],
	[100.01, "100.01", "100.01", "-100.01", "0.01", "100.01"],
	[100.001, "100", "100.001", "-100.001", "0.01", "100.001"],
	[100.0001, "100", "100", "-100", "0.01", "100.0001"],
	[100.00001, "100", "100", "-100", "0.01", "100"],
	[1.99, "1.99", "1.99", "-1.99", "0.503", "1.99"],
	[1.999, "2", "1.999", "-1.999", "0.5", "1.999"],
	[1.9999, "2", "2", "-2", "0.5", "1.9999"],
	[1.99999999, "2", "2", "-2", "0.5", "2"],
	[0.047, "0.05", "0.047", "-0.047", "21.277", "0.047"],
	[0.0047, "4.7e-3", "0.005", "-0.005", "212.766", "0.0047"],
	[0.00047, "4.7e-4", "4.7e-4", "-4.7e-4", "2127.66", "0.0005"],
	[0.000047, "4.7e-5", "4.7e-5", "-4.7e-5", "21276.596", "4.7e-5"],
	[4.7e-8, "4.7e-8", "4.7e-8", "-4.7e-8", "2.128e+7", "4.7e-8"],
	[4.7e-15, "4.7e-15", "4.7e-15", "-4.7e-15", "2.128e+14", "4.7e-15"],
	[1e-50,"1.e-50","1.e-50","-1.e-50","1.e+50","1.e-50"],
	[1e+50, "1.e+50", "1.e+50", "-1.e+50", "1.e-50", "1.e+50"],
	[3.141592653589793, "3.14", "3.142", "-3.142", "0.318", "3.1416"],
	[8769956796.082695, "8.77e+9", "8.77e+9", "-8.77e+9", "1.14e-10", "8.77e+9"],
	[NaN, "NaN", "NaN", "NaN", "NaN", "NaN"],
	[0, "0", "0", "0", "Infinity", "0"]
];

describe("Formatting - float", ()=>{
	for (let t of tests) {
		test(""+t[0], ()=>{
			let v = t[0];
			let res = [v, float(v, 2), float(v, 3), float(-v, 3), float(1/v, 3), float(v, 4)];
			expect(res).toEqual(t);
		});
	}
});
